import argparse
import logging
from datetime import datetime, timedelta
from ..utils.monitor import LLMMonitor

def main():
    parser = argparse.ArgumentParser(description="LLM Pentesting Techniques Monitor")
    
    parser.add_argument(
        "--data-dir",
        default="output",
        help="Directory to store collected data"
    )
    
    parser.add_argument(
        "--interval",
        type=int,
        default=3600,
        help="Time between checks in seconds (default: 3600)"
    )
    
    parser.add_argument(
        "--max-history",
        type=int,
        default=30,
        help="Maximum number of days to keep history (default: 30)"
    )
    
    parser.add_argument(
        "--since",
        help="Get techniques added since this date (format: YYYY-MM-DD)"
    )
    
    parser.add_argument(
        "--once",
        action="store_true",
        help="Run collection once and exit"
    )
    
    args = parser.parse_args()
    
    monitor = LLMMonitor(
        data_dir=args.data_dir,
        check_interval=args.interval,
        max_history=args.max_history
    )
    
    if args.since:
        try:
            since_date = datetime.strptime(args.since, "%Y-%m-%d")
            techniques = monitor.get_new_techniques_since(since_date)
            print(f"\nFound {len(techniques)} new techniques since {args.since}:")
            for tech in techniques:
                print(f"- {tech['title']} ({tech['source']})")
        except ValueError:
            print("Error: Invalid date format. Use YYYY-MM-DD")
            return
    
    elif args.once:
        monitor.update_techniques()
        print("Collection completed. Check the output directory for results.")
    
    else:
        print("Starting continuous monitoring...")
        print("Press Ctrl+C to stop")
        monitor.run_continuous()

if __name__ == "__main__":
    main() 